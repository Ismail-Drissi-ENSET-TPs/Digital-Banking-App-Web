stages:
  - install
  - test
  - build
  - deploy
  - update

image: node:18

variables:
  APP_NAME: angular-frontend-app
  ENV: staging

install_stage:
  stage: install
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

test_stage:
  stage: test
  dependencies:
    - install_stage
  script:
    - echo "Running tests..."

build_stage:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - >
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"
      > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "$CI_PROJECT_DIR"
      --dockerfile "$CI_PROJECT_DIR/Dockerfile"
      --destination "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  artifacts:
    paths:
      - image.tar
    when: on_success

update_stage:
  stage: update
  image:
    name: ubuntu:22.04
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - mkdir -p /root/.ssh
    - echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # run ssh-agent
    - eval $(ssh-agent -s)
    # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # Git
    - git config --global user.email "drissiisismail@gmail.com"
    - git config --global user.name "drissiisismail"
    - git clone git@gitlab.com:digitalbankingapp/digital-banking-app-helm-chart.git
    - cd digital-banking-app-helm-chart
    - ls -latr
  script:
    # Update Image TAG
    - "sed -i '/^frontend_image:/,/^[^ ]/s/^  tag: .*/  tag: ${CI_COMMIT_SHORT_SHA}/' custom-values.yaml"
    - git add custom-values.yaml
    - git commit -am "Update Image"
    - git push

deploy_stage:
  stage: deploy
  script:
    - echo "Deploy step not implemented yet"
